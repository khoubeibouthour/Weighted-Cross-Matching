grace
R

library("curl", lib.loc="~/work/RLibs")
library("httr", lib.loc="~/work/RLibs")
library("devtools", lib.loc="~/work/RLibs")
library("RCurl", lib.loc="~/work/RLibs")
library("h2o", lib.loc="~/work/RLibs")

h2o.init(nthreads = -1, min_mem_size="500G")

trainData = h2o.importFile(path="/home/kbouthou/work/queries/1pc/train")
testData = h2o.importFile(path="/home/kbouthou/work/queries/1pc/test")

trainData$neighbor = as.factor(trainData$neighbor)
trainData$same_path = as.factor(trainData$same_path)
trainData$same_imageheight = as.factor(trainData$same_imageheight)
trainData$same_imagewidth = as.factor(trainData$same_imagewidth)
trainData$same_exifimageheight = as.factor(trainData$same_exifimageheight)
trainData$same_exifimagewidth = as.factor(trainData$same_exifimagewidth)
trainData$same_gpslongituderef = as.factor(trainData$same_gpslongituderef)
trainData$same_gpslatituderef = as.factor(trainData$same_gpslatituderef)
trainData$same_gpsaltituderef = as.factor(trainData$same_gpsaltituderef)
trainData$same_gpsimgdirectionref = as.factor(trainData$same_gpsimgdirectionref)
trainData$same_orientation = as.factor(trainData$same_orientation)
trainData$same_flash = as.factor(trainData$same_flash)
trainData$same_make = as.factor(trainData$same_make)
trainData$same_model = as.factor(trainData$same_model)

testData$neighbor = as.factor(testData$neighbor)
testData$same_path = as.factor(testData$same_path)
testData$same_imageheight = as.factor(testData$same_imageheight)
testData$same_imagewidth = as.factor(testData$same_imagewidth)
testData$same_exifimageheight = as.factor(testData$same_exifimageheight)
testData$same_exifimagewidth = as.factor(testData$same_exifimagewidth)
testData$same_gpslongituderef = as.factor(testData$same_gpslongituderef)
testData$same_gpslatituderef = as.factor(testData$same_gpslatituderef)
testData$same_gpsaltituderef = as.factor(testData$same_gpsaltituderef)
testData$same_gpsimgdirectionref = as.factor(testData$same_gpsimgdirectionref)
testData$same_orientation = as.factor(testData$same_orientation)
testData$same_flash = as.factor(testData$same_flash)
testData$same_make = as.factor(testData$same_make)
testData$same_model = as.factor(testData$same_model)

col.names = colnames(trainData)[-25]

trainedDRF = h2o.randomForest(
    x=col.names,
    model_id=NULL,
    training_frame=trainData,
    validation_frame=testData,
    nfolds=10,
    y="neighbor",
    keep_cross_validation_predictions=FALSE,
    keep_cross_validation_fold_assignment=FALSE,
    score_each_iteration=FALSE,
    score_tree_interval=0,
    fold_assignment="AUTO",
    fold_column=NULL,
    ignore_const_cols=TRUE,
    offset_column=NULL,
    weights_column=NULL,
    balance_classes=FALSE,
    class_sampling_factors=NULL,
    max_after_balance_size=1,
    max_hit_ratio_k=0,
    ntrees=30,
    max_depth=12,
    min_rows=1,
    nbins=20,
    nbins_top_level=1024,
    nbins_cats=1024,
    stopping_rounds=0,
    stopping_metric="AUTO",
    stopping_tolerance=0.001,
    max_runtime_secs=0,
    seed=-1,
    build_tree_one_node=FALSE,
    mtries=-1,
    sample_rate=0.6320000291,
    sample_rate_per_class=NULL,
    binomial_double_trees=TRUE,
    checkpoint=NULL,
    col_sample_rate_change_per_level=1,
    col_sample_rate_per_tree=1,
    min_split_improvement=1e-05,
    histogram_type="AUTO",
    categorical_encoding="AUTO",
    calibrate_model=FALSE
)

trainedDRF.path = h2o.saveModel(object=trainedDRF, path="/home/kbouthou/work/queries/sampledData/10pc", force=TRUE)

dim(trainData)
# h2o.str(trainData, cols=TRUE)
# summary(trainData$neighbor)
tab = h2o.table(trainData[,"neighbor"])
h2o.print(tab,2)

h2o.confusionMatrix(trainedDRF)
h2o.auc(trainedDRF, valid=TRUE)
h2o.confusionMatrix(trainedDRF, newdata=testData)
h2o.logloss(trainedDRF, valid=TRUE)

h2o.download_mojo(trainedDRF, "/home/kbouthou/work/queries", FALSE)

17:26

java -cp h2o.jar hex.genmodel.tools.PrintMojo --tree 0 -i DRF_model_R_1506712971960_1.zip -o DRF_model_R_1506712971960_1.gv
dot -Tpng DRF_model_R_1506712971960_1.gv -o DRF_model_R_1506712971960_1.png
open DRF_model_R_1506712971960_1.png

https://dzone.com/articles/visualizing-h2o-gbm-and-random-forest-mojo-models